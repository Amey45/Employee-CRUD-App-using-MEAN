{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let EmployeecrudComponent = class EmployeecrudComponent {\n  constructor(http) {\n    this.http = http;\n    this.EmployeeArray = [];\n    this.currentEmployeeID = '';\n    this.name = '';\n    this.address = '';\n    this.phone = '';\n    this.getAllEmployee();\n  }\n  getAllEmployee() {\n    this.http.get('http://localhost:8000/user/getAll').subscribe(resultData => {\n      console.log(resultData);\n      this.EmployeeArray = resultData.data;\n    });\n  }\n  setDelete(data) {\n    this.http.delete(\"http://localhost:8000/user/delete/\" + data._id).subscribe(resultData => {\n      console.log(resultData);\n      alert('Employee deleted successfully');\n      this.getAllEmployee();\n    });\n  }\n  setUpdate(data) {\n    this.name = data.name;\n    this.address = data.address;\n    this.phone = data.phone;\n    this.currentEmployeeID = data._id;\n  }\n  UpdateRecords() {\n    let bodyData = {\n      name: this.name,\n      address: this.address,\n      phone: this.phone\n    };\n    this.http.patch('http://localhost:8000/user/update/' + this.currentEmployeeID, bodyData).subscribe(resultData => {\n      console.log(resultData);\n      alert('Employee updated successfully');\n      this.getAllEmployee();\n      this.name = '';\n      this.address = '';\n      this.phone = '';\n    });\n  }\n  save() {\n    if (this.currentEmployeeID == '') {\n      this.register();\n    } else {\n      this.UpdateRecords();\n    }\n  }\n  register() {\n    let bodyData = {\n      name: this.name,\n      address: this.address,\n      phone: this.phone\n    };\n    this.http.post('http://localhost:8000/user/create', bodyData).subscribe(resultData => {\n      console.log(resultData);\n      alert('Student registered successfully');\n      this.getAllEmployee();\n      this.name = '';\n      this.address = '';\n      this.phone = '';\n    });\n  }\n};\nEmployeecrudComponent = __decorate([Component({\n  selector: 'app-employeecrud',\n  templateUrl: './employeecrud.component.html',\n  styleUrls: ['./employeecrud.component.scss']\n})], EmployeecrudComponent);","map":{"version":3,"names":["Component","EmployeecrudComponent","constructor","http","EmployeeArray","currentEmployeeID","name","address","phone","getAllEmployee","get","subscribe","resultData","console","log","data","setDelete","delete","_id","alert","setUpdate","UpdateRecords","bodyData","patch","save","register","post","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Linkcode Internship\\Employee Registration MEAN Stack\\frontend\\src\\app\\employeecrud\\employeecrud.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-employeecrud',\n  templateUrl: './employeecrud.component.html',\n  styleUrls: ['./employeecrud.component.scss'],\n})\nexport class EmployeecrudComponent {\n  EmployeeArray: any[] = [];\n  currentEmployeeID = '';\n\n  name: string = '';\n  address: string = '';\n  phone: string = '';\n\n  constructor(private http: HttpClient) {\n    this.getAllEmployee();\n  }\n  getAllEmployee() {\n    this.http\n      .get('http://localhost:8000/user/getAll')\n      .subscribe((resultData: any) => {\n        console.log(resultData);\n        this.EmployeeArray = resultData.data;\n      });\n  }\n\n  setDelete(data: any) {\n    this.http\n      .delete(\"http://localhost:8000/user/delete/\" + data._id)\n      .subscribe((resultData: any) => {\n        console.log(resultData);\n        alert('Employee deleted successfully');\n        this.getAllEmployee();\n      });\n  }\n\n  setUpdate(data: any) {\n    this.name = data.name;\n    this.address = data.address;\n    this.phone = data.phone;\n\n    this.currentEmployeeID = data._id;\n  }\n\n  UpdateRecords() {\n    let bodyData = {\n      name: this.name,\n      address: this.address,\n      phone: this.phone,\n    };\n\n    this.http\n      .patch(\n        'http://localhost:8000/user/update/' + this.currentEmployeeID,\n        bodyData\n      )\n      .subscribe((resultData: any) => {\n        console.log(resultData);\n        alert('Employee updated successfully');\n        this.getAllEmployee();\n        this.name = '';\n        this.address = '';\n        this.phone = '';\n      });\n  }\n\n  save() {\n    if (this.currentEmployeeID == '') {\n      this.register();\n    } else {\n      this.UpdateRecords();\n    }\n  }\n\n  register() {\n    let bodyData = {\n      name: this.name,\n      address: this.address,\n      phone: this.phone,\n    };\n\n    this.http\n      .post('http://localhost:8000/user/create', bodyData)\n      .subscribe((resultData: any) => {\n        console.log(resultData);\n        alert('Student registered successfully');\n        this.getAllEmployee();\n        this.name = '';\n        this.address = '';\n        this.phone = '';\n      });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}