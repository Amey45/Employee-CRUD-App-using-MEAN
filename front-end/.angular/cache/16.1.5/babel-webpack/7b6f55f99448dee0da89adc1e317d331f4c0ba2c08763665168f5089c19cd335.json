{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class EmployeecrudComponent {\n  constructor(http) {\n    this.http = http;\n    this.EmployeeArray = [];\n    this.currentEmployeeID = '';\n    this.name = '';\n    this.address = '';\n    this.phone = '';\n    this.getAllEmployee();\n  }\n  getAllEmployee() {\n    this.http.get('http://localhost:8000/user/getAll').subscribe(resultData => {\n      console.log(resultData);\n      this.EmployeeArray = resultData.data;\n    });\n  }\n  setDelete(data) {\n    this.http.delete(\"http://localhost:8000/user/delete/\" + data._id).subscribe(resultData => {\n      console.log(resultData);\n      alert('Employee deleted successfully');\n      this.getAllEmployee();\n    });\n  }\n  setUpdate(data) {\n    this.name = data.name;\n    this.address = data.address;\n    this.phone = data.phone;\n    this.currentEmployeeID = data._id;\n  }\n  UpdateRecords() {\n    let bodyData = {\n      name: this.name,\n      address: this.address,\n      phone: this.phone\n    };\n    this.http.patch('http://localhost:8000/user/update/' + this.currentEmployeeID, bodyData).subscribe(resultData => {\n      console.log(resultData);\n      alert('Employee updated successfully');\n      this.getAllEmployee();\n      this.name = '';\n      this.address = '';\n      this.phone = '';\n    });\n  }\n  save() {\n    if (this.currentEmployeeID == '') {\n      this.register();\n    } else {\n      this.UpdateRecords();\n    }\n  }\n  register() {\n    let bodyData = {\n      name: this.name,\n      address: this.address,\n      phone: this.phone\n    };\n    this.http.post('http://localhost:8000/user/create', bodyData).subscribe(resultData => {\n      console.log(resultData);\n      alert('Student registered successfully');\n      this.getAllEmployee();\n      this.name = '';\n      this.address = '';\n      this.phone = '';\n    });\n  }\n}\nEmployeecrudComponent.ɵfac = function EmployeecrudComponent_Factory(t) {\n  return new (t || EmployeecrudComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nEmployeecrudComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeecrudComponent,\n  selectors: [[\"app-employeecrud\"]],\n  decls: 20,\n  vars: 9,\n  consts: [[1, \"container\", \"mt-4\", 2, \"border\", \"3px solid black\"], [1, \"card\", 2, \"border\", \"none\", \"padding\", \"15px\"], [2, \"margin\", \"auto\"], [1, \"mb-3\"], [1, \"form-label\", 2, \"font-weight\", \"bold\"], [\"type\", \"text\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter your Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter your address\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter your Phone number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"container\", \"mt-4\", 2, \"border\", \"3px solid black\", \"padding\", \"15px\"]],\n  template: function EmployeecrudComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Employee Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\")(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeecrudComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Address \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeecrudComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.address = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 4);\n      i0.ɵɵtext(15, \"Phone \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EmployeecrudComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.phone = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function EmployeecrudComponent_Template_button_click_17_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(18, \" Submit \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(19, \"div\", 9);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.name)(\"ngModelOptions\", i0.ɵɵpureFunction0(6, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address)(\"ngModelOptions\", i0.ɵɵpureFunction0(7, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.phone)(\"ngModelOptions\", i0.ɵɵpureFunction0(8, _c0));\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EmployeecrudComponent","constructor","http","EmployeeArray","currentEmployeeID","name","address","phone","getAllEmployee","get","subscribe","resultData","console","log","data","setDelete","delete","_id","alert","setUpdate","UpdateRecords","bodyData","patch","save","register","post","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","EmployeecrudComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EmployeecrudComponent_Template_input_ngModelChange_8_listener","$event","EmployeecrudComponent_Template_input_ngModelChange_12_listener","EmployeecrudComponent_Template_input_ngModelChange_16_listener","EmployeecrudComponent_Template_button_click_17_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["D:\\Linkcode Internship\\Employee Registration MEAN Stack\\frontend\\src\\app\\employeecrud\\employeecrud.component.ts","D:\\Linkcode Internship\\Employee Registration MEAN Stack\\frontend\\src\\app\\employeecrud\\employeecrud.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-employeecrud',\n  templateUrl: './employeecrud.component.html',\n  styleUrls: ['./employeecrud.component.scss'],\n})\nexport class EmployeecrudComponent {\n  EmployeeArray: any[] = [];\n  currentEmployeeID = '';\n\n  name: string = '';\n  address: string = '';\n  phone: string = '';\n\n  constructor(private http: HttpClient) {\n    this.getAllEmployee();\n  }\n  getAllEmployee() {\n    this.http\n      .get('http://localhost:8000/user/getAll')\n      .subscribe((resultData: any) => {\n        console.log(resultData);\n        this.EmployeeArray = resultData.data;\n      });\n  }\n\n  setDelete(data: any) {\n    this.http\n      .delete(\"http://localhost:8000/user/delete/\" + data._id)\n      .subscribe((resultData: any) => {\n        console.log(resultData);\n        alert('Employee deleted successfully');\n        this.getAllEmployee();\n      });\n  }\n\n  setUpdate(data: any) {\n    this.name = data.name;\n    this.address = data.address;\n    this.phone = data.phone;\n\n    this.currentEmployeeID = data._id;\n  }\n\n  UpdateRecords() {\n    let bodyData = {\n      name: this.name,\n      address: this.address,\n      phone: this.phone,\n    };\n\n    this.http\n      .patch(\n        'http://localhost:8000/user/update/' + this.currentEmployeeID,\n        bodyData\n      )\n      .subscribe((resultData: any) => {\n        console.log(resultData);\n        alert('Employee updated successfully');\n        this.getAllEmployee();\n        this.name = '';\n        this.address = '';\n        this.phone = '';\n      });\n  }\n\n  save() {\n    if (this.currentEmployeeID == '') {\n      this.register();\n    } else {\n      this.UpdateRecords();\n    }\n  }\n\n  register() {\n    let bodyData = {\n      name: this.name,\n      address: this.address,\n      phone: this.phone,\n    };\n\n    this.http\n      .post('http://localhost:8000/user/create', bodyData)\n      .subscribe((resultData: any) => {\n        console.log(resultData);\n        alert('Student registered successfully');\n        this.getAllEmployee();\n        this.name = '';\n        this.address = '';\n        this.phone = '';\n      });\n  }\n}\n","<div style=\"border: 3px solid black;\" class=\"container mt-4\">\n  <div style=\"border:none; padding: 15px;\" class=\"card\">\n    <h1 style=\"margin: auto;\">Employee Registration</h1>\n\n    <form style=\"\">\n      <div class=\"mb-3\">\n        <label style=\"font-weight: bold;\" class=\"form-label\">Name </label>\n        <input\n          type=\"text\"\n          [(ngModel)]=\"name\"\n          [ngModelOptions]=\"{ standalone: true }\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Enter your Name\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label style=\"font-weight: bold;\" class=\"form-label\">Address </label>\n        <input\n          type=\"text\"\n          [(ngModel)]=\"address\"\n          [ngModelOptions]=\"{ standalone: true }\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Enter your address\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label style=\"font-weight: bold;\" class=\"form-label\">Phone </label>\n        <input\n          type=\"text\"\n          [(ngModel)]=\"phone\"\n          [ngModelOptions]=\"{ standalone: true }\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Enter your Phone number\"\n        />\n      </div>\n\n      <button type=\"submit\" (click)=\"save()\" class=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  </div>\n</div>\n\n<div style=\"border: 3px solid black; padding : 15px\" class=\"container mt-4\">\n  \n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}